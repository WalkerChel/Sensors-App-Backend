services:
  app:
    container_name: sensors-app
    build: ./
    networks:
      - app-network    
    env_file:
      - .env
    ports: 
      - ${HTTP_SERVER_PORT}:8080    
    depends_on: 
      postgres_db:
        condition: service_healthy
        restart: true
      redis_db:
        condition: service_healthy
        restart: true
      
    restart: on-failure

  postgres_db:
    container_name: ${POSTGRES_DB}
    restart: always
    image: postgres:17.2
    networks:
      - app-network
    volumes:
      - ./.database/postgres/data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
  
  redis_db:
    container_name: ${REDIS_CONTAINER_NAME}
    image: redis:7.4.1
    env_file:
      - .env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER=${REDIS_USER}
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - ./.database/redis/data:/var/lib/redis/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping"]
      interval: 10s
      start_period: 30s
      timeout: 10s
      retries: 5
    restart: always
    networks:
      - app-network


networks:
  app-network:
    name: app-network
    driver: bridge
